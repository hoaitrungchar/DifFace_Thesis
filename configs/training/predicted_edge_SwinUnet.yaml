trainer:
  target: trainer.TrainerPredictedPrior

model:
  target: models.SwinUnet.SwinUnet
  params:
    config: 1
    patch_size: 4
    num_classes: 1        
    embed_dim: 96      
    depths: [2,2,2,2]        
    depths_decoder: [1, 2, 2, 2]
    num_heads: [3, 6, 12, 24]
    window_size: 4
    qkv_bias: True
    in_chans: 3
    qk_scale: null
    drop_rate: 0.
    drop_path_rate: 0.1
    ape: False
    patch_norm: True
    use_checkpoint: False

data:
  train:
    type: PriorTraining 
    params:
      dataset_type: train
      dir_path: [/data/FFHQ/Dataset/FFHQ/train]
      noise_path1: [/data/FFHQ/Dataset/CelebA-HQ/train]
      noise_path2: [/data/FFHQ/Dataset/ImageNet/train]
      transform_type: default
      transform_kwargs:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
      transform_noise_type: crop_norm_train
      transform_noise_kwargs:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
        img_resize: 256
        crop_size: 256
      need_path: False
      im_exts: [png, jpg, JPEG]
      recursive: False
      kernel_gaussian_size: 3
      img_size: 256
      folder_mask_path: [/data/FFHQ/Dataset/Mask/train]
      type_prior: edgeCanny
      mask_kwargs:
        nvidia_mask_proba: 1
        nvidia_mask_kwargs:
          folder_mask_path: [/data/FFHQ/Dataset/Mask/train]
  val:
    type: PriorTraining 
    params:
      dataset_type: val
      dir_path: [/data/FFHQ/Dataset/FFHQ/val]
      noise_path1: [/data/FFHQ/Dataset/CelebA-HQ/val]
      noise_path2: [/data/FFHQ/Dataset/ImageNet/val]
      transform_type: default
      transform_kwargs:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
      transform_noise_type: crop_norm_val_test
      transform_noise_kwargs:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
        img_resize: 256
        crop_size: 256
      need_path: False
      im_exts: [png, jpg, JPEG]
      recursive: False
      kernel_gaussian_size: 3
      img_size: 256
      folder_mask_path: [/data/FFHQ/Dataset/Mask/val]
      type_prior: edgeCanny
      mask_kwargs:
        nvidia_mask_proba: 1
        nvidia_mask_kwargs:
          folder_mask_path: [/data/FFHQ/Dataset/Mask/val]
    

train:
  lr: 1e-3
  lr_min: 1e-6
  batch: [32, 32]   # batchsize for training and validation
  microbatch: 32
  num_workers: 8
  prefetch_factor: 2
  iterations: 600000
  weight_decay: 0
  save_freq: 10
  val_freq: ${train.save_freq}
  log_freq: [2, 2, 3]
  ema_rate: 0.999
  loss_type: WCE
  tf_logging: True
  local_logging: True

project_name: Thesis_blind_image_inpainting
group_name: FFHQ_prior
name: test