trainer:
  target: trainer.TrainerPredictedPrior

model:
  target: models.SwinUnet.SwinUnet
  params:
    config: 1
    patch_size: 4
    num_classes: 1        
    embed_dim: 96      
    depths: [2,2,2,2]        
    depths_decoder: [1, 2, 2, 2]
    num_heads: [3, 6, 12, 24]
    window_size: 4
    qkv_bias: True
    in_chans: 3
    qk_scale: null
    drop_rate: 0.
    drop_path_rate: 0.1
    ape: False
    patch_norm: True
    use_checkpoint: False

data:
  train:
    type: blindinpainting 
    params:
      dir_path: /data/FFHQ/FFHQ/train
      noise_path1: /data/FFHQ/CelebA-HQ/train
      noise_path2: /data/FFHQ/ImageNet/train
      transform_type: default
      transform_kwargs:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
      need_path: False
      im_exts: [png, jpg, JPEG]
      recursive: False
      mask_kwargs:
        irregular_proba: 1
        irregular_kwargs:
          max_angle: 4
          max_len: 200
          max_width: 100
          max_times: 5
          min_times: 1

        box_proba: 1
        box_kwargs:
          margin: 10
          bbox_min_size: 30
          bbox_max_size: 150
          max_times: 4
          min_times: 1

        outpainting_proba: 1
        outpainting_kwargs:
          min_padding_percent: 0.04
          max_padding_percent: 0.30
          left_padding_prob: 0.5
          top_padding_prob: 0.5
          right_padding_prob: 0.5
          bottom_padding_prob: 0.5
        ca_proba: 1
        half_proba: 1
        nvidia_mask_proba: 1
        nvidia_mask_kwargs:
          folder_mask_path: /data/FFHQ/irregular_mask/train
      type_prior: edge
  val:
    type: blindinpainting 
    params:
      dir_path: /data/FFHQ/FFHQ/val
      noise_path1: /data/FFHQ/CelebA-HQ/val
      noise_path2: /data/FFHQ/ImageNet/val
      transform_type: default
      transform_kwargs:
        mean: [0.0, 0.0, 0.0]
        std: [1.0, 1.0, 1.0]
      need_path: False
      im_exts: [png, jpg, JPEG]
      recursive: False
      mask_kwargs:
        irregular_proba: 1
        irregular_kwargs:
          max_angle: 4
          max_len: 200
          max_width: 100
          max_times: 5
          min_times: 1

        box_proba: 1
        box_kwargs:
          margin: 10
          bbox_min_size: 30
          bbox_max_size: 150
          max_times: 4
          min_times: 1

        outpainting_proba: 1
        outpainting_kwargs:
          min_padding_percent: 0.04
          max_padding_percent: 0.30
          left_padding_prob: 0.5
          top_padding_prob: 0.5
          right_padding_prob: 0.5
          bottom_padding_prob: 0.5
        ca_proba: 1
        half_proba: 1
        nvidia_mask_proba: 1
        nvidia_mask_kwargs:
          folder_mask_path: /data/FFHQ/irregular_mask/test
      type_prior: edge
train:
  lr: 1e-4
  lr_min: 5e-6
  batch: [64, 64]   # batchsize for training and validation
  microbatch: 64
  num_workers: 8
  prefetch_factor: 2
  iterations: 500000
  weight_decay: 0
  save_freq: 1
  val_freq: ${train.save_freq}
  log_freq: [200, 200, 5]
  ema_rate: 0.999
  loss_type: WCE
  tf_logging: True
  local_logging: True

resume: False